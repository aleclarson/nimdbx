Snapshot	nimdbx/Transaction.html#Snapshot	Transaction: Snapshot	
Transaction	nimdbx/Transaction.html#Transaction	Transaction: Transaction	
beginSnapshot	nimdbx/Transaction.html#beginSnapshot,Database	Transaction: beginSnapshot(db: Database): Snapshot	
beginTransaction	nimdbx/Transaction.html#beginTransaction,Database	Transaction: beginTransaction(db: Database): Transaction	
txn	nimdbx/Transaction.html#txn,Snapshot	Transaction: txn(s: Snapshot): ptr MDBX_txn	
finish	nimdbx/Transaction.html#finish,Snapshot	Transaction: finish(s: Snapshot)	
commit	nimdbx/Transaction.html#commit,Transaction	Transaction: commit(t: Transaction)	
abort	nimdbx/Transaction.html#abort,Transaction	Transaction: abort(t: Transaction)	
inSnapshot	nimdbx/Transaction.html#inSnapshot,Database,proc(Snapshot)	Transaction: inSnapshot(db: Database; fn: proc (t: Snapshot))	
inTransaction	nimdbx/Transaction.html#inTransaction,Database,proc(Transaction)	Transaction: inTransaction(db: Database; fn: proc (t: Transaction))	
CollectionSnapshot	nimdbx/Transaction.html#CollectionSnapshot	Transaction: CollectionSnapshot	
CollectionTransaction	nimdbx/Transaction.html#CollectionTransaction	Transaction: CollectionTransaction	
transaction	nimdbx/Transaction.html#transaction,CollectionTransaction	Transaction: transaction(t: CollectionTransaction): Transaction	
txn	nimdbx/Transaction.html#txn,CollectionSnapshot	Transaction: txn(snap: CollectionSnapshot): ptr MDBX_txn	
with	nimdbx/Transaction.html#with,Collection,Snapshot	Transaction: with(coll: Collection; snap: Snapshot): CollectionSnapshot	
with	nimdbx/Transaction.html#with,Collection,Transaction	Transaction: with(coll: Collection; t: Transaction): CollectionTransaction	
beginSnapshot	nimdbx/Transaction.html#beginSnapshot,Collection	Transaction: beginSnapshot(coll: Collection): CollectionSnapshot	
beginTransaction	nimdbx/Transaction.html#beginTransaction,Collection	Transaction: beginTransaction(coll: Collection): CollectionTransaction	
finish	nimdbx/Transaction.html#finish,CollectionSnapshot	Transaction: finish(s: CollectionSnapshot)	
commit	nimdbx/Transaction.html#commit,CollectionTransaction	Transaction: commit(t: CollectionTransaction)	
abort	nimdbx/Transaction.html#abort,CollectionTransaction	Transaction: abort(t: CollectionTransaction)	
inSnapshot	nimdbx/Transaction.html#inSnapshot,Collection,proc(CollectionSnapshot)	Transaction: inSnapshot(coll: Collection; fn: proc (t: CollectionSnapshot))	
inTransaction	nimdbx/Transaction.html#inTransaction,Collection,proc(CollectionTransaction)	Transaction: inTransaction(coll: Collection; fn: proc (t: CollectionTransaction))	
lastSequence	nimdbx/Transaction.html#lastSequence,CollectionSnapshot	Transaction: lastSequence(s: CollectionSnapshot): uint64	
nextSequence	nimdbx/Transaction.html#nextSequence,CollectionTransaction,int	Transaction: nextSequence(t: CollectionTransaction; count: int = 1): uint64	
stats	nimdbx/Transaction.html#stats,CollectionSnapshot	Transaction: stats(s: CollectionSnapshot): MDBX_stat	
stats	nimdbx/Transaction.html#stats,Collection	Transaction: stats(coll: Collection): MDBX_stat	
entryCount	nimdbx/Transaction.html#entryCount	Transaction: entryCount(coll: Collection | CollectionSnapshot): int	
