DatabaseObj	nimdbx/Database.html#DatabaseObj	Database: DatabaseObj	
Database	nimdbx/Database.html#Database	Database: Database	
NoSubdir	nimdbx/Database.html#NoSubdir	DatabaseFlag.NoSubdir	
ReadOnly	nimdbx/Database.html#ReadOnly	DatabaseFlag.ReadOnly	
Exclusive	nimdbx/Database.html#Exclusive	DatabaseFlag.Exclusive	
Accede	nimdbx/Database.html#Accede	DatabaseFlag.Accede	
NoTLS	nimdbx/Database.html#NoTLS	DatabaseFlag.NoTLS	
Coalesce	nimdbx/Database.html#Coalesce	DatabaseFlag.Coalesce	
LIFOReclaim	nimdbx/Database.html#LIFOReclaim	DatabaseFlag.LIFOReclaim	
PagePerturb	nimdbx/Database.html#PagePerturb	DatabaseFlag.PagePerturb	
NoMetaSync	nimdbx/Database.html#NoMetaSync	DatabaseFlag.NoMetaSync	
SafeNoSync	nimdbx/Database.html#SafeNoSync	DatabaseFlag.SafeNoSync	
UtterlyNoSync	nimdbx/Database.html#UtterlyNoSync	DatabaseFlag.UtterlyNoSync	
DatabaseFlag	nimdbx/Database.html#DatabaseFlag	Database: DatabaseFlag	
DatabaseFlags	nimdbx/Database.html#DatabaseFlags	Database: DatabaseFlags	
CopyCompactCopy	nimdbx/Database.html#CopyCompactCopy	CopyDBFlag.CopyCompactCopy	
CopyForceDynamicSize	nimdbx/Database.html#CopyForceDynamicSize	CopyDBFlag.CopyForceDynamicSize	
CopyDBFlag	nimdbx/Database.html#CopyDBFlag	Database: CopyDBFlag	
CopyDBFlags	nimdbx/Database.html#CopyDBFlags	Database: CopyDBFlags	
JustDelete	nimdbx/Database.html#JustDelete	DeleteDBMode.JustDelete	
EnsureUnused	nimdbx/Database.html#EnsureUnused	DeleteDBMode.EnsureUnused	
WaitForUnused	nimdbx/Database.html#WaitForUnused	DeleteDBMode.WaitForUnused	
DeleteDBMode	nimdbx/Database.html#DeleteDBMode	Database: DeleteDBMode	
existsDatabase	nimdbx/Database.html#existsDatabase,string	Database: existsDatabase(path: string): bool	
deleteDatabase	nimdbx/Database.html#deleteDatabase,string	Database: deleteDatabase(path: string; mode = EnsureUnused)	
eraseDatabase	nimdbx/Database.html#eraseDatabase,string	Database: eraseDatabase(path: string; mode = EnsureUnused)	
DefaultDatabaseFlags	nimdbx/Database.html#DefaultDatabaseFlags	Database: DefaultDatabaseFlags	
DefaultFileMode	nimdbx/Database.html#DefaultFileMode	Database: DefaultFileMode	
DefaultMinFileSize	nimdbx/Database.html#DefaultMinFileSize	Database: DefaultMinFileSize	
DefaultMaxFileSize	nimdbx/Database.html#DefaultMaxFileSize	Database: DefaultMaxFileSize	
DefaultMaxCollections	nimdbx/Database.html#DefaultMaxCollections	Database: DefaultMaxCollections	
openDatabase	nimdbx/Database.html#openDatabase,string	Database: openDatabase(path: string; flags = DefaultDatabaseFlags;\n             fileMode = DefaultFileMode; minFileSize = DefaultMinFileSize;\n             maxFileSize = DefaultMaxFileSize; fileGrowsBy = -1;\n             fileShrinksBy = -1; pageSize = -1;\n             maxCollections = DefaultMaxCollections): Database	
isOpen	nimdbx/Database.html#isOpen,Database	Database: isOpen(db: Database): bool	
mustBeOpen	nimdbx/Database.html#mustBeOpen,Database	Database: mustBeOpen(db: Database)	
env	nimdbx/Database.html#env,Database	Database: env(db: Database): ptr MDBX_env	
stats	nimdbx/Database.html#stats,Database	Database: stats(db: Database): MDBX_stat	
path	nimdbx/Database.html#path,Database	Database: path(db: Database): string	
copyTo	nimdbx/Database.html#copyTo,Database,string,CopyDBFlags	Database: copyTo(db: Database; path: string; flags: CopyDBFlags = {})	
close	nimdbx/Database.html#close,Database	Database: close(db: Database)	
closeAndDelete	nimdbx/Database.html#closeAndDelete,Database	Database: closeAndDelete(db: Database; mode = EnsureUnused)	
